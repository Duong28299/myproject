--
-- Script was generated by Devart dbForge Studio 2019 for MySQL, Version 8.2.23.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 12/4/2020 9:37:22 AM
-- Server version: 5.5.5-10.3.22-MariaDB-1:10.3.22+maria~bionic
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

--
-- Set default database
--
USE MISA_Provider_Development;

--
-- Drop procedure `Proc_DeleteProvider`
--
DROP PROCEDURE IF EXISTS Proc_DeleteProvider;

--
-- Drop procedure `Proc_GetProviderByCode`
--
DROP PROCEDURE IF EXISTS Proc_GetProviderByCode;

--
-- Drop procedure `Proc_GetProviderByCodeEdit`
--
DROP PROCEDURE IF EXISTS Proc_GetProviderByCodeEdit;

--
-- Drop procedure `Proc_GetProviderByID`
--
DROP PROCEDURE IF EXISTS Proc_GetProviderByID;

--
-- Drop procedure `Proc_GetProviderPagping`
--
DROP PROCEDURE IF EXISTS Proc_GetProviderPagping;

--
-- Drop procedure `Proc_GetProviders`
--
DROP PROCEDURE IF EXISTS Proc_GetProviders;

--
-- Drop procedure `Proc_InsertProvider`
--
DROP PROCEDURE IF EXISTS Proc_InsertProvider;

--
-- Drop procedure `Proc_UpdateProvider`
--
DROP PROCEDURE IF EXISTS Proc_UpdateProvider;

--
-- Drop table `Provider`
--
DROP TABLE IF EXISTS Provider;

--
-- Drop procedure `Proc_GetProviderGroups`
--
DROP PROCEDURE IF EXISTS Proc_GetProviderGroups;

--
-- Drop table `ProviderGroup`
--
DROP TABLE IF EXISTS ProviderGroup;

--
-- Set default database
--
USE MISA_Provider_Development;

--
-- Create table `ProviderGroup`
--
CREATE TABLE ProviderGroup (
  ProviderGroupID char(36) NOT NULL,
  ProviderGroupCode varchar(20) NOT NULL COMMENT 'Mã nhóm nhà cung cấp',
  ProviderGroupName varchar(255) NOT NULL COMMENT 'Tên nhóm nhà cung cấp'
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8,
COLLATE utf8_general_ci,
COMMENT = 'Bảng nhóm nhà cung cấp';

--
-- Create index `UK_ProviderGroup_ProviderGroupID` on table `ProviderGroup`
--
ALTER TABLE ProviderGroup
ADD UNIQUE INDEX UK_ProviderGroup_ProviderGroupID (ProviderGroupID);

DELIMITER $$

--
-- Create procedure `Proc_GetProviderGroups`
--
CREATE PROCEDURE Proc_GetProviderGroups ()
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM ProviderGroup pg;
END
$$

DELIMITER ;

--
-- Create table `Provider`
--
CREATE TABLE Provider (
  ProviderID char(36) NOT NULL COMMENT 'ID nhà cung cấp',
  ProviderCode varchar(20) NOT NULL COMMENT 'Mã nhà cung cấp',
  ProviderName varchar(255) NOT NULL COMMENT 'Tên nhà cung cấp',
  ProviderAddress varchar(255) DEFAULT NULL COMMENT 'Địa chỉ nhà cung cấp',
  ProviderTaxNo varchar(25) DEFAULT NULL,
  ProviderPhone varchar(50) DEFAULT NULL COMMENT 'SĐT nhà cung cấp',
  ProviderGroupID char(36) DEFAULT NULL COMMENT 'ID nhóm nhà cung cấp',
  Debt decimal(18, 4) DEFAULT 0.0000 COMMENT 'Số tiền nợ',
  DebtTerm int(11) DEFAULT NULL COMMENT 'Ngày nợ',
  BankName varchar(255) DEFAULT NULL COMMENT 'Tên ngân hàng',
  BankBranchName varchar(255) DEFAULT NULL COMMENT 'Tên chi nhánh ngân hàng',
  AccountNumber varchar(25) DEFAULT NULL COMMENT 'Số tài khoản ngân hàng',
  ProviderType bit(1) DEFAULT NULL COMMENT 'Kiểu nhà cung cấp "0-Tổ chức, 1- Cá nhân"',
  Follow bit(1) DEFAULT b'0' COMMENT 'Trạng thái theo dõ "0-Theo dõi, 1-Ngừng theo dõi"',
  ProviderEmail varchar(100) DEFAULT NULL COMMENT 'Email nhà cung cấp',
  CitizenIdentityNo varchar(50) DEFAULT NULL COMMENT 'Số hộ chiếu/CMT',
  CitizenIdentityDate date DEFAULT NULL COMMENT 'Ngày cấp CMND',
  CitizenIdentityPlace varchar(255) DEFAULT NULL COMMENT 'Nơi cấp CMND',
  ContactName varchar(100) DEFAULT NULL COMMENT 'Họ tên người liên hệ',
  ContactEmail varchar(100) DEFAULT NULL COMMENT 'Email người liên hệ',
  ContactPhone varchar(50) DEFAULT NULL COMMENT 'Số điện thoại người liên hệ',
  ContactTitle varchar(255) DEFAULT NULL COMMENT 'Chức danh người liên hệ',
  ContactAddress varchar(255) DEFAULT NULL COMMENT 'Địa chỉ người liên hệ',
  CreatedDate datetime DEFAULT NULL COMMENT 'Ngày tạo',
  CreatedBy varchar(100) binary CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'Người tạo',
  ModifiedDate datetime DEFAULT NULL COMMENT 'Ngày sửa',
  ModifiedBy varchar(100) DEFAULT NULL COMMENT 'Người sửa'
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8,
COLLATE utf8_general_ci,
COMMENT = 'Bảng nhà cung cấp';

--
-- Create index `ProviderCode` on table `Provider`
--
ALTER TABLE Provider
ADD UNIQUE INDEX ProviderCode (ProviderCode);

--
-- Create foreign key
--
ALTER TABLE Provider
ADD CONSTRAINT FK_Provider_ProviderGroup_ProviderGroupID FOREIGN KEY (ProviderGroupID)
REFERENCES ProviderGroup (ProviderGroupID) ON DELETE NO ACTION;

DELIMITER $$

--
-- Create procedure `Proc_UpdateProvider`
--
CREATE PROCEDURE Proc_UpdateProvider (IN ProviderID char(36), IN ProviderCode varchar(20), IN ProviderName varchar(255), IN ProviderAddress varchar(255), IN ProviderTaxNo varchar(25), IN ProviderPhone varchar(50), IN ProviderGroupID char(36), IN Debt decimal(18, 4), IN DebtTerm int(11), IN BankName varchar(255), IN BankBranchName varchar(255), IN AccountNumber varchar(25), IN ProviderType bit(1), IN Follow bit, IN ProviderEmail varchar(100), IN CitizenIdentityNo varchar(50), IN CitizenIdentityDate date, IN CitizenIdentityPlace varchar(255), IN ContactName varchar(100), IN ContactEmail varchar(100), IN ContactPhone varchar(50), IN ContactTitle varchar(255), IN ContactAddress varchar(255), IN ModifiedBy varchar(100))
SQL SECURITY INVOKER
COMMENT 'Sửa nhà cung cấp'
BEGIN
  UPDATE Provider p
  SET p.ProviderCode = ProviderCode,
      p.ProviderName = ProviderName,
      p.ProviderAddress = ProviderAddress,
      p.ProviderTaxNo = ProviderTaxNo,
      p.ProviderPhone = ProviderPhone,
      p.ProviderGroupID = ProviderGroupID,
      p.Debt = Debt,
      p.DebtTerm = DebtTerm,
      p.BankName = BankName,
      p.BankBranchName = BankBranchName,
      p.AccountNumber = AccountNumber,
      p.ProviderType = ProviderType,
      p.Follow = Follow,
      p.ProviderEmail = ProviderEmail,
      p.CitizenIdentityNo = CitizenIdentityNo,
      p.CitizenIdentityDate = CitizenIdentityDate,
      p.CitizenIdentityPlace = CitizenIdentityPlace,
      p.ContactName = ContactName,
      p.ContactEmail = ContactEmail,
      p.ContactPhone = ContactPhone,
      p.ContactTitle = ContactTitle,
      p.ContactAddress = ContactAddress,
      p.ModifiedDate = NOW(),
      p.ModifiedBy = p.ModifiedBy
  WHERE p.ProviderID = ProviderID;
END
$$

--
-- Create procedure `Proc_InsertProvider`
--
CREATE PROCEDURE Proc_InsertProvider (IN ProviderID char(36), IN ProviderCode varchar(20), IN ProviderName varchar(255), IN ProviderAddress varchar(255), IN ProviderTaxNo varchar(25), IN ProviderPhone varchar(50), IN ProviderGroupID char(36), IN Debt decimal(18, 4), IN DebtTerm int(11), IN BankName varchar(255), IN BankBranchName varchar(255), IN AccountNumber varchar(25), IN ProviderType bit(1), IN Follow bit, IN ProviderEmail varchar(100), IN CitizenIdentityNo varchar(50), IN CitizenIdentityDate date, IN CitizenIdentityPlace varchar(255), IN ContactName varchar(100), IN ContactEmail varchar(100), IN ContactPhone varchar(50), IN ContactTitle varchar(255), IN ContactAddress varchar(255), IN CreatedBy varchar(100), IN ModifiedBy varchar(100))
SQL SECURITY INVOKER
COMMENT 'Thêm nhà cung cấp'
BEGIN
  IF (ProviderID IS NULL) THEN
    SET ProviderID = UUID();
  END IF;
  INSERT INTO Provider (ProviderID,
  ProviderCode,
  ProviderName,
  ProviderAddress,
  ProviderTaxNo,
  ProviderPhone,
  ProviderGroupID,
  Debt,
  DebtTerm,
  BankName,
  BankBranchName,
  AccountNumber,
  ProviderType,
  Follow,
  ProviderEmail,
  CitizenIdentityNo,
  CitizenIdentityDate,
  CitizenIdentityPlace,
  ContactName,
  ContactEmail,
  ContactPhone,
  ContactTitle,
  ContactAddress,
  CreatedDate,
  CreatedBy,
  ModifiedDate,
  ModifiedBy)
    VALUES (ProviderID, ProviderCode, ProviderName, ProviderAddress, ProviderTaxNo, ProviderPhone, ProviderGroupID, Debt, DebtTerm, BankName, BankBranchName, AccountNumber, ProviderType, Follow, ProviderEmail, CitizenIdentityNo, CitizenIdentityDate, CitizenIdentityPlace, ContactName, ContactEmail, ContactPhone, ContactTitle, ContactAddress, NOW(), CreatedBy, NOW(), ModifiedBy);
  SELECT
    ProviderID;
END
$$

--
-- Create procedure `Proc_GetProviders`
--
CREATE DEFINER = 'tcduong'@'%'
PROCEDURE Proc_GetProviders ()
BEGIN
  SELECT
    p.ProviderID
  FROM Provider p;
END
$$

--
-- Create procedure `Proc_GetProviderPagping`
--
CREATE PROCEDURE Proc_GetProviderPagping (IN pageIndex int, IN pageSize int)
SQL SECURITY INVOKER
BEGIN
  DECLARE temp int(11) DEFAULT 0;
  SET temp = (pageIndex - 1) * pageSize;
  SELECT
    p.ProviderID,
    p.ProviderGroupID,
    p.ProviderCode,
    p.ProviderName,
    p.ProviderType,
    pg.ProviderGroupName,
    p.ProviderPhone,
    p.ProviderAddress,
    p.Follow
  FROM Provider p
    LEFT JOIN ProviderGroup pg
      ON p.ProviderGroupID = pg.ProviderGroupID
  ORDER BY p.ModifiedDate DESC
  LIMIT pageSize
  OFFSET temp;
END
$$

--
-- Create procedure `Proc_GetProviderByID`
--
CREATE PROCEDURE Proc_GetProviderByID (IN ProviderID char(36))
SQL SECURITY INVOKER
COMMENT 'Lấy nhà cung cấp theo ID'
BEGIN
  SELECT
    *
  FROM Provider p
  WHERE p.ProviderID = ProviderID;
END
$$

--
-- Create procedure `Proc_GetProviderByCodeEdit`
--
CREATE DEFINER = 'tcduong'@'%'
PROCEDURE Proc_GetProviderByCodeEdit (IN ProviderCode varchar(20), IN ProviderID char(36))
COMMENT 'Check nhà cung cấp trong hệ thống trừ bản ghi truyền vào'
BEGIN
  SELECT
    p.ProviderCode
  FROM Provider p
  WHERE p.ProviderCode = ProviderCode
  AND p.ProviderID != ProviderID;
END
$$

--
-- Create procedure `Proc_GetProviderByCode`
--
CREATE PROCEDURE Proc_GetProviderByCode (IN ProviderCode varchar(20))
SQL SECURITY INVOKER
COMMENT 'Lấy nhà cung cấp theo mã'
BEGIN
  SELECT
    p.ProviderCode
  FROM Provider p
  WHERE p.ProviderCode = ProviderCode;
END
$$

--
-- Create procedure `Proc_DeleteProvider`
--
CREATE DEFINER = 'tcduong'@'%'
PROCEDURE Proc_DeleteProvider (IN ProviderID char(36))
BEGIN
  DELETE
    FROM Provider
  WHERE Provider.ProviderID = ProviderID;
END
$$

DELIMITER ;

-- 
-- Dumping data for table ProviderGroup
--
INSERT INTO ProviderGroup VALUES
('4c3a755a-52a7-479b-86e1-0e6f83073f49', 'TVH', 'Nhóm cung cấp TVH'),
('bf4495ce-223b-4b27-a4de-8ab399ca49e7', 'TCDUONG', 'Nhóm cung cấp TCDUONG'),
('cca17ca0-8209-4cd4-83fc-d1dcc8f00de7', 'TTH', 'Nhóm cung cấp TTH');

-- 
-- Dumping data for table Provider
--
INSERT INTO Provider VALUES
('5244128f-2901-465a-ae43-7bd454038334', 'a', 'b', '', '', '', NULL, 10000000.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 10:19:44', NULL, '2020-12-03 10:19:44', NULL),
('5bd7862e-b5d8-4401-8883-41ba00a05618', 'bvbvvbbb', 'zdzcxzczcz', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:25:53', NULL, '2020-12-03 11:25:53', NULL),
('31d3c11c-591f-4c18-b500-d2a59acf62b7', 'cvbcvbb', 'cvbcvbb', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:27:29', NULL, '2020-12-03 11:27:29', NULL),
('2e331c6c-f659-43b3-b96b-95cf1cf4f54c', 'cvxzczxc', 'zxczxczxc', '', '', '', NULL, 10000000000.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 10:18:56', NULL, '2020-12-03 10:20:23', NULL),
('fa49a485-67c4-46e3-903b-436345069b76', 'dsafsadf', 'ádasdad', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 10:11:43', NULL, '2020-12-03 10:11:43', NULL),
('def2ebc1-f6d2-45e5-9619-2f1cd2cac701', 'fgsdf', 'sdfsdffdsfffs', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:27:23', NULL, '2020-12-03 11:27:23', NULL),
('02970d36-de0e-4312-b5f8-18423b0d8b07', 'fhggfhfgh', 'hfghfghhh', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:25:41', NULL, '2020-12-03 11:25:41', NULL),
('0bceba45-58ef-4c35-8724-7e079305de88', 'fsdfdf', 'sdfsdfdsf', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:25:34', NULL, '2020-12-03 11:25:34', NULL),
('dfe5d08c-5bde-456b-896f-a79f8001ac3c', 'hfhfhhghf', 'fghhhhh', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:25:48', NULL, '2020-12-03 11:25:48', NULL),
('58ccd0ba-37b1-4dfd-927a-f759e99aff8b', 'jghjhgjg', 'hjghjghjjjj', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:25:44', NULL, '2020-12-03 11:25:44', NULL),
('8818ebdf-cb05-453f-a4a8-86340929fe9f', 'khkhj', 'khjkhkhjk', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:25:37', NULL, '2020-12-03 11:25:37', NULL),
('917727f2-3f6f-465d-95f0-17f9f370750d', 'NCC-NTT', 'Nguyễn Thu Thủy', 'Lào Cai', '987567866789', '0998767967', 'cca17ca0-8209-4cd4-83fc-d1dcc8f00de7', 3000000.0000, 80, 'Ngân hàng TBBank', 'Lào Cai', '09089867', False, False, NULL, NULL, NULL, NULL, 'Ông Trần Văn Hưng', 'trancanhduong@gmail.com', '09897656', 'Không có chức danh', 'Nam Định', '2020-12-03 09:41:57', NULL, '2020-12-03 09:44:20', NULL),
('c94b3476-42ac-4b4d-be50-3d8d0ebfbb13', 'NCC-TCD', 'Trần Cảnh Dương', 'Giao Long- Giao Thủy - Nam Định', '0998678997', '0987898335', 'bf4495ce-223b-4b27-a4de-8ab399ca49e7', 1000000.0000, 30, 'ViettinBank', 'Nam Định', '9478762811', False, False, NULL, NULL, NULL, NULL, 'Ông Trần Cảnh Dương', 'trancanhduong@gmail.com', '0986875667', 'Chủ tịch xã', 'Giao Long - Giao Thủy - Nam Định', '2020-12-03 09:39:53', NULL, '2020-12-03 09:39:53', NULL),
('da3f1ccc-c614-45e6-8312-4228f5160a15', 'NCC-TNA', 'Tống Ngọc Anh', 'Hà Nam', '988799876', '0099878', '4c3a755a-52a7-479b-86e1-0e6f83073f49', 100000.0000, 30, 'TBBank', 'Hà Nam', '989839333', False, False, NULL, NULL, NULL, NULL, 'Ông Trần Cảnh Dương', 'trancanhduong@gmail.com', '099877868', 'Không có', 'Hà Nam', '2020-12-03 09:49:32', NULL, '2020-12-03 09:49:32', NULL),
('686f4d07-4613-485e-9eba-ed60f7c85e34', 'NCC-TVH', 'Trần Cảnh Dương', 'Giao Long- Giao Thủy - Nam Định', '0998678997', '0987898335', 'bf4495ce-223b-4b27-a4de-8ab399ca49e7', 1000000.0000, 30, 'ViettinBank', 'Nam Định', '9478762811', False, False, NULL, NULL, NULL, NULL, 'Ông Trần Cảnh Dương', 'trancanhduong@gmail.com', '0986875667', 'Chủ tịch xã', 'Giao Long - Giao Thủy - Nam Định', '2020-12-03 09:40:07', NULL, '2020-12-03 09:40:07', NULL),
('fed75d6d-6ac8-4050-9894-f71b773ec063', 'sadas', 'đâsđsđ', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:24:07', NULL, '2020-12-03 11:24:07', NULL),
('7441617d-f5a2-4af1-99e0-e7eed90983fc', 'sdadasdd', 'vcbcvbbb', '', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:25:58', NULL, '2020-12-03 11:25:58', NULL),
('fb6fa4de-bfa8-4673-aa97-10c1205d5e16', 'xcvxcvxc', 'xcvxcv', 'xcvxcvxv', '', '', NULL, 0.0000, 0, '', '', '', False, False, NULL, NULL, NULL, NULL, 'Ông ', '', '', '', '', '2020-12-03 11:25:30', NULL, '2020-12-03 11:25:30', NULL);

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;